@model RadCms.Web.Areas.Comment.Entities.Comment

@{
    ViewBag.Title = "Edit";
    Layout = "~/Core/Views/Shared/_LayoutCmsPopup.cshtml";
}

<h2>Edit</h2>

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/cms/js", "~/Areas/Comment/assets/Comment.js")


@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Comment</legend>

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.CreatedBy)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <div class="display-label">Original Comment</div>
    <div class="editor-field">
    @*@Html.TextAreaFor(model => model.OrigContent, new 
        { @readonly = "readonly", @rows="6", cols="48", @class="htmlEditor" })*@
        @Html.HiddenFor(model => model.OrigContent)
        @Html.Raw(Model.OrigContent)
</div>

        <div class="display-label">Comment</div>
        <div class="editor-field">
        @Html.TextAreaFor(model => model.Content, new
   { @rows="6", cols="48", @class = "htmlEditor" })
            @*@Html.EditorFor(model => model.Content, new { @readonly = "readonly", @rows = "6", cols = "48" })*@
            @Html.ValidationMessageFor(model => model.Content)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(modelItem => modelItem.Status,
                        new SelectList(
                            new Dictionary<string, int> { 
                                {"ACTIVE", 1},
                                {"DELETED", 0},
                                {"PENDING", -1}
                            },
                            "Value",
                            "Key",
                            Model.Status
                        ))
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PageId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PageId)
            @Html.ValidationMessageFor(model => model.PageId)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
